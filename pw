#!/usr/bin/env python

import argparse
import getpass
import nacl.exceptions
import os
import pwutils
import re
from subprocess import Popen, PIPE

fields = 'site', 'username', 'password', 'extra'
max_field_len = len(max(fields, key=len))


def lookup_credential(pw, search_term):

    n = 0
    passwords = []
    for found_name in [name for name in pw if re.search(search_term, name,
                                                        re.I)]:
        n += 1
        info = pw[found_name]
        passwords.append(info['password'])
        print "\n{}.) {}".format(n, found_name)

        for field in fields:
            if field in info:

                value = info[field]
                print "{0:{1}} : {2}".format(field, max_field_len,
                                             '*' * len(value)
                                             if (field == 'password'
                                                 and not args.display)
                                             else value)

    match_count = len(passwords)
    if match_count == 0:
        print 'no matches'
    else:
        password = None
        if match_count == 1:
            password = passwords[0]
        else:
            need_choice = True
            while need_choice:
                choice = raw_input("1-{}> ".format(match_count))
                try:
                    choice_idx = int(choice) - 1
                    password = passwords[choice_idx]
                    need_choice = False
                except (ValueError, IndexError):
                    print "choice must be 1-{}".format(match_count)

        if os.uname()[0] == 'Darwin':
            clip_cmd = 'pbcopy'
        else:
            clip_cmd = ['xsel', '-b']

        try:
            clip_process = Popen(clip_cmd, stdin=PIPE)
            clip_process.communicate(password)
            print "password copied to clipboard."
        except OSError as e:
            print '{} If UNIX, install "xsel".'.format(e)


def prompt(pw):
    try:
        while True:
            line = raw_input('>>>')
            lookup_credential(pw, line)
            print
    except EOFError:
        pass

parser = argparse.ArgumentParser(
    description='Look up password, store it in the system clipboard.')
parser.add_argument('--display', '-d', action='store_true',
                    help='display password (default: obscure)')
parser.add_argument('--list', '-l', action='store_true',
                    help='List credential names, then exit.')
parser.add_argument('pw_file', help='password list')
parser.add_argument('credential_name', nargs='?', default=None,
                    help='name of credential (if not specified, command '
                    'will prompt.')
args = parser.parse_args()

try:
    pw = pwutils.load(os.path.expanduser('~/.pw/' + args.pw_file + '.pw'),
                      getpass.getpass())
    if args.list:
        for name in pw:
            print name
            print '{} credentials'.format(len(pw))
    else:
        if args.credential_name is None:
            prompt(pw)
        else:
            lookup_credential(pw, args.credential_name)

except (IOError, nacl.exceptions.CryptoError) as e:
    print e

except (KeyboardInterrupt, EOFError):
    print
